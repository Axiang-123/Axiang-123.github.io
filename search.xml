<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>uinapp打包小程序对接企业微信登录</title>
      <link href="blog/03-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/"/>
      <url>blog/03-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="03-深度学习uinapp"><a href="#03-深度学习uinapp" class="headerlink" title="03-深度学习uinapp"></a>03-深度学习uinapp</h1><h3 id="主题介绍"><a href="#主题介绍" class="headerlink" title="主题介绍 :"></a>主题介绍 :</h3><p>使用uinapp打包到小程序实现企业微信的登录的搭建<br>配置域名：<a href="https://uniapp.xxx.net.cn/">https://uniapp.xxx.net.cn/</a> </p><ul><li>首先我们要明白小程序的运行环境和浏览器的运行环境是一样的，它里面经过了webpack打包编译的处理，使用uniapp开发的小程序在h5页面上是没有问题的,但是运行到微信开发者工具中就会出现各种各样的问题,比如路由传参拿不到数据,小程序页面数据，体积过大，这些都需要我们前端开发工程师去进行解决，还有其他一些问题等等。<h3 id="创建Login文件夹"><a href="#创建Login文件夹" class="headerlink" title="创建Login文件夹"></a>创建Login文件夹</h3> 我是使用一个页面两个登录，使用变量来控制它的是走企业还是走账号登录<h3 id="结构搭建"><a href="#结构搭建" class="headerlink" title="结构搭建"></a>结构搭建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 登录框登录 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;loginFrom&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;lx&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入账号,账号格式“shan.zhang”&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">:password</span>=<span class="string">&quot;defaultType&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;eye&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;defaultType&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;eyeStatus&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;eye&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;!defaultType&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;eyeStatus&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sub&quot;</span> <span class="attr">form-type</span>=<span class="string">&quot;submit&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line">            登录</span><br><span class="line">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 获取企业微信用户信息登录 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;login-btn&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sub&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">        企业微信登录</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-def&quot;</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span></span><br><span class="line">        账号登录</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    loginFrom: <span class="literal">false</span>, <span class="comment">//后面的都围绕这个变量来进行操作</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li></ul><ol><li>在组件创建的阶段判断使用GetSystemInfo函数用于获取当前系统的信息，是否是企业微信登录,uinapp是支持wx的原生的语法的<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">onLoad&#123;</span><br><span class="line">  wx.getSystemInfo(&#123;</span><br><span class="line">      <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">        <span class="keyword">if</span> (res.host &amp;&amp; res.host.env === <span class="string">&#x27;WeChat&#x27;</span>) &#123;</span><br><span class="line">          that.loginFrom = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 获取cookie，如果cookie存在就它直接跳转至首页</span></span><br><span class="line">     wx.getStorageSync(&#123;</span><br><span class="line">      key: <span class="string">&#x27;cookie&#x27;</span>,</span><br><span class="line">      <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span> &#123;</span><br><span class="line">        wx.switchTab(&#123;</span><br><span class="line">          url: <span class="string">&quot;/pages/home/index.vue&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>Ps：小程序是没有document,如果我们使用document.cookie去获取cookie的话是会报错的，小程序的document是undefined，undefined后面在加点的话是会报错的，这里需要注意。<h3 id="企业微信登录的逻辑"><a href="#企业微信登录的逻辑" class="headerlink" title="企业微信登录的逻辑"></a>企业微信登录的逻辑</h3><strong>首先要保证你的小程序是和企业是关联的，以及id配置是企业的</strong></li></ul><ol><li>调用 wx.qy.login企业微信开发者文档里面有具体的介绍，这里就不过多的讲<br>使用 wx.qy.login这个原生方法获取到code<br>这里有一个比较坑的点千万不要拿微信小程序的code去尝试，那个code是没有身份的<br>点击微信开发者工具，上面有一个小眼睛 点击一下预览 ，扫码登录，我们在代码打印code这样的话就可以拿到用户的code<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.qy.login(&#123;</span><br><span class="line">    <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res.code, <span class="string">&#x27;这是错误的信息&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="请求用户的在企业的信息"><a href="#请求用户的在企业的信息" class="headerlink" title="请求用户的在企业的信息"></a>请求用户的在企业的信息</h3><strong>封装好接口，基于上面code在发一次请求</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  qyLogin(res.code).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">const</span> &#123; user, roleList, cookie &#125; = res</span><br><span class="line">    <span class="comment">//  这个位置拿到用户在企业的权限的和信息</span></span><br><span class="line">    &#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            wx.showToast(&#123;</span><br><span class="line">              title: <span class="string">&#x27;登录失败，获取企业微信信息失败&#x27;</span>,</span><br><span class="line">              icon: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">              duration: <span class="number">5000</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="built_in">console</span>.log(err, <span class="string">&#x27;这是错误的信息&#x27;</span>)</span><br><span class="line">          &#125;).finally(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err, <span class="string">&#x27;不管成功和失败都会执行&#x27;</span>)</span><br><span class="line">          &#125;);</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">**后面存储用户的信息，可以使用本地储存的方式，也可以使用Vuex**</span></span><br><span class="line"><span class="string">### 存储用户信息</span></span><br><span class="line"><span class="string">   `</span><span class="string">``</span>js</span><br><span class="line">      <span class="function"><span class="title">login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">        ..........<span class="comment">//调用原生的api </span></span><br><span class="line">      that.$store.commit(<span class="string">&quot;user/setUserinfo&quot;</span>, &#123; user, roleList &#125;)</span><br><span class="line">       that.$store.commit(<span class="string">&quot;user/setCookie&quot;</span>, cookie);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>这个位置为啥不是this，而是that, 因为在里面拿不到this拿不到组件的实例，这里有聊到this的指向的问题<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">非严格模式，this 指向全局对象，严格模式，this 为 undefined。</span><br><span class="line">普通对象 obj 没有 this，里面访问的 this指向 window 对象。</span><br><span class="line">如果一个函数中有this，但是它没有被上一级的对象所调用，那么this指向的就是window</span><br><span class="line">this 永远指向最后调用它的那个对象,适用于非箭头函数的调用</span><br></pre></td></tr></table></figure><h3 id="发送公司的请求"><a href="#发送公司的请求" class="headerlink" title="发送公司的请求"></a>发送公司的请求</h3><strong>跳转至首页</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wx.request(&#123;</span><br><span class="line">      url: <span class="string">&#x27;http://xxx&#x27;</span>,</span><br><span class="line">      method: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">      header: &#123;</span><br><span class="line">        Cookie: cookie,</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="title">success</span>(<span class="params">it1</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(it1)</span><br><span class="line">        <span class="comment">// console.log(wx.getStorageSync(&#x27;cookie&#x27;), &#x27;这是cookie&#x27;)</span></span><br><span class="line">        wx.setStorageSync(&#123; <span class="attr">key</span>: <span class="string">&#x27;permission&#x27;</span>, <span class="attr">data</span>: it1.data &#125;);</span><br><span class="line">        uni.switchTab(&#123;</span><br><span class="line">          url: <span class="string">&quot;/pages/home/index&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>以上就是uinapp从0-1搭建小程序的一些总结，后面会继续总结自己，加油，冲冲冲 Peace and love</p></div></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>uinapp数据的请求</title>
      <link href="blog/02-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/"/>
      <url>blog/02-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="02-深度学习uinapp"><a href="#02-深度学习uinapp" class="headerlink" title="02-深度学习uinapp"></a>02-深度学习uinapp</h1><h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍 :"></a>概念介绍 :</h3><p>使用uinapp搭建微信小程序需要注意运行环境，小程序运行的环境和浏览器的运行环境不一样，cookie的获取也不一致这一点需要注意<br>配置域名： 主要域名 :<a href="https://uniapp.dcloud.net.cn/">https://uniapp.dcloud.net.cn/</a><br><strong>统一返回格式</strong>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;meta&quot;</span>: &#123; </span><br><span class="line">  <span class="string">&quot;status&quot;</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;获取成功&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>记得在管理后台配置服务器域名</p><h3 id="网络请求库"><a href="#网络请求库" class="headerlink" title="网络请求库"></a>网络请求库</h3><p>使用 flyio 作为 uni-app 的网络请求库<br>请求库: 支持拦截器+支持小程序 =&gt; flyio<br>微信小程序原生的 <code>wx.request</code> 或 uni-app 封装的 <code>uni.request</code> 功能太简单，不支持拦截器。<br>而小程序中也不支持直接用 <code>axios</code>，官方推荐使用 <strong><a href="https://www.npmjs.com/package/flyio">flyio</a></strong>，它兼容多平台，功能可媲美 <code>axios</code>。<br><strong>不用安装, 创建的项目中内置<a href="https://www.kancloud.cn/zengqs1976/uni-app/1176137">flyio</a></strong><br>操作步骤</p><ol><li>在 src 目录下创建 utils 目录，并添加 request.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FlyIO <span class="keyword">from</span> <span class="string">&#x27;flyio/dist/npm/wx&#x27;</span></span><br><span class="line"><span class="comment">// 创建新的 FlyIO 实例</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="keyword">new</span> FlyIO()</span><br><span class="line"><span class="comment">// 设置超时(服务器性能偏差)</span></span><br><span class="line">http.config.timeout = <span class="number">30000</span>;</span><br><span class="line"><span class="comment">// 设置请求基地址</span></span><br><span class="line">http.config.baseURL = <span class="string">&#x27;https://www.uinav.com/api/xxx&#x27;</span></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">http.interceptors.request.use(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">    uni.showLoading(&#123;</span><br><span class="line">        title: <span class="string">&quot;加载中...&quot;</span>,</span><br><span class="line">        mask: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> request</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">http.interceptors.response.use(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 隐藏加载框</span></span><br><span class="line">    uni.hideLoading()</span><br><span class="line">    <span class="comment">// 只取返回的数据字段</span></span><br><span class="line">    <span class="keyword">return</span> response.data</span><br><span class="line">&#125;, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    uni.hideLoading()</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> http</span><br></pre></td></tr></table></figure></li><li>在 main.js 中将 request.js 模块导出的 flyio 实例，挂载到 Vue.prototype<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入 request.js 模块</span></span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="comment">// 挂载到 Vue.prototype</span></span><br><span class="line">Vue.prototype.$http = http</span><br></pre></td></tr></table></figure><h3 id="配置小程序分包"><a href="#配置小程序分包" class="headerlink" title="配置小程序分包"></a>配置小程序分包</h3>利用分包机制，实现将小程序代码进行拆分和按需加载<br>将<strong>不立马用的页面</strong>代码放到子包中，只有当子包中的页面被访问时才进行加载，这样做可以减少主包的尺寸，提升小程序首次加载速度。<br><strong>如何分配主包和子包中的内容？</strong></li></ol><ul><li>主包：用户一打开就要用的页面应放入主包（tabBar 导航栏对应的 4 个页面）</li><li>子包：其他的都可以放到子包中<br><strong>操作步骤</strong></li></ul><ol><li>项目根目录中创建分包的根目录 <code>pages_sub1</code></li><li>在 <code>pages_sub1</code>目录中新建分包的页面组件，如：列表页、详情页</li></ol><ul><li>pages_sub1/product-list/product-list.vue</li><li>pages_sub1/product-detail/product-detail.vue</li></ul><ol><li>在 <code>pages.json</code> 中配置分包信息<code>subPackages</code> ，和 <code>pages</code>平级<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 配置分包们</span></span><br><span class="line"><span class="attr">&quot;subPackages&quot;</span>: [</span><br><span class="line">    <span class="comment">// 配置分包1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;root&quot;</span>: <span class="string">&quot;pages_sub1&quot;</span>,</span><br><span class="line"><span class="attr">&quot;pages&quot;</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;path&quot;</span>: <span class="string">&quot;product-detail/product-detail&quot;</span>,</span><br><span class="line"><span class="attr">&quot;style&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;path&quot;</span>: <span class="string">&quot;product-list/product-list&quot;</span>,</span><br><span class="line"><span class="attr">&quot;style&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;xxxx &quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基于uinapp路由跳转"><a href="#基于uinapp路由跳转" class="headerlink" title="基于uinapp路由跳转"></a>基于uinapp路由跳转</h3><strong>操作步骤</strong><br>用<code>&lt;navigator&gt;</code>替换<code>&lt;image&gt;</code>外的<code>&lt;view&gt;</code>，实现声明式路由跳转：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 循环渲染轮播图的 item 项 --&gt;</span><br><span class="line">&lt;swiper-item v-<span class="keyword">for</span>=<span class="string">&quot;(item, index) in swiperList&quot;</span> :key=<span class="string">&quot;index&quot;</span>&gt;</span><br><span class="line">  &lt;navigator</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;swiper-content&quot;</span></span><br><span class="line">    :url=<span class="string">&quot;`/pages_sub1/product-detail/product-detail?pid=$&#123;item.goods_id&#125;`&quot;</span></span><br><span class="line">  &gt;</span><br><span class="line">    &lt;image :src=<span class="string">&quot;item.image_src&quot;</span>&gt;&lt;/image&gt;</span><br><span class="line">  &lt;/navigator&gt;</span><br><span class="line">&lt;/swiper-item&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li>可以通过添加编译模式 查看<strong>启动参数</strong><br>当然，你也可以用小程序API来实现编程式路由跳转!<h3 id="封装消息提示工具函数"><a href="#封装消息提示工具函数" class="headerlink" title="封装消息提示工具函数"></a>封装消息提示工具函数</h3><strong>操作步骤</strong></li></ul><ol><li>在 src/utils 目录下新建一个 message.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">showMessage</span>(<span class="params">title = <span class="string">&quot;请求数据失败&quot;</span>, duration = <span class="number">1500</span>, icon = <span class="string">&quot;none&quot;</span></span>) </span>&#123;</span><br><span class="line">    uni.showToast(&#123;</span><br><span class="line">        title,</span><br><span class="line">        duration,</span><br><span class="line">        icon,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 main.js 中将 showMessage 挂载到 Vue.prototype 上<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入 message.js 模块</span></span><br><span class="line"><span class="keyword">import</span> &#123; showMessage &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/message&#x27;</span></span><br><span class="line">Vue.prototype.$msg = showMessage</span><br></pre></td></tr></table></figure></li><li>改造原先的代码<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求失败处理</span></span><br><span class="line"><span class="keyword">if</span> (meta.status !== <span class="number">200</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span>.$msg();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模拟-请求数据"><a href="#模拟-请求数据" class="headerlink" title="模拟_请求数据"></a>模拟_请求数据</h3><strong>操作步骤</strong></li><li>在 data 中定义存放数据的数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 分类导航的数据列表</span></span><br><span class="line">navList: []</span><br></pre></td></tr></table></figure></li><li>在生命周期函数中调用获取数据的方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">// 2. 在页面刚加载的时候，调用获取分类导航数据的方法</span></span><br><span class="line">    <span class="built_in">this</span>.getNavList();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 3. 获取分类导航数据的方法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="title">getNavList</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; meta, message &#125; = <span class="keyword">await</span> <span class="built_in">this</span>.$http.get(<span class="string">&quot;/xxx/xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 请求失败处理</span></span><br><span class="line">      <span class="keyword">if</span> (meta.status !== <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.$msg();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">this</span>.navList = message;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="统一处理时间格式价格代码"><a href="#统一处理时间格式价格代码" class="headerlink" title="统一处理时间格式价格代码"></a>统一处理时间格式价格代码</h3><strong>注意uinapp编译到小程序它是不支持正则的变量的</strong></li></ol><ul><li>将价格信息统一显示成带有2位小数的格式<br><strong>操作步骤</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filters: &#123;</span><br><span class="line">  <span class="function"><span class="title">formatNum</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Number</span>(value).toFixed(<span class="number">2</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li></ul><ol><li>使用过滤器<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用管道符来过滤</span></span><br><span class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;goods-price&quot;</span>&gt;￥&#123;&#123; xxx.xxx | formatNum &#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li>处理时间的格式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">js传入时间戳转换日期格式函数</span><br><span class="line"> §§ --- utils/dateFormat.js</span><br><span class="line"> §§ <span class="number">1000</span></span><br><span class="line">+<span class="comment">/**</span></span><br><span class="line"><span class="comment">+ * js传入时间戳转换日期格式</span></span><br><span class="line"><span class="comment">+ * </span></span><br><span class="line"><span class="comment">+ * <span class="doctag">@param <span class="type">&#123;any&#125;</span> </span>timestamp </span></span><br><span class="line"><span class="comment">+ * <span class="doctag">@param <span class="type">&#123;any&#125;</span> </span>formatStr </span></span><br><span class="line"><span class="comment">+ * <span class="doctag">@returns </span></span></span><br><span class="line"><span class="comment">+ */</span></span><br><span class="line">+<span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">timestamp, formatStr</span>) </span>&#123;</span><br><span class="line">+    <span class="keyword">var</span> formatStr = formatStr || <span class="string">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span>;</span><br><span class="line">+    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp);</span><br><span class="line">+    <span class="keyword">var</span> o = &#123;</span><br><span class="line">+        <span class="string">&quot;M+&quot;</span>: date.getMonth() + <span class="number">1</span>,</span><br><span class="line">+        <span class="string">&quot;d+&quot;</span>: date.getDate(),</span><br><span class="line">+        <span class="string">&quot;h+&quot;</span>: date.getHours(),</span><br><span class="line">+        <span class="string">&quot;m+&quot;</span>: date.getMinutes(),</span><br><span class="line">+        <span class="string">&quot;s+&quot;</span>: date.getSeconds()</span><br><span class="line">+    &#125;;</span><br><span class="line">+</span><br><span class="line">+    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(formatStr)) &#123;</span><br><span class="line">+        formatStr = formatStr.replace(<span class="built_in">RegExp</span>.$1, (date.getFullYear() + <span class="string">&quot;&quot;</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$1.length));</span><br><span class="line">+    &#125;</span><br><span class="line">+</span><br><span class="line">+    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">+        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(&quot;</span> + k + <span class="string">&quot;)&quot;</span>).test(formatStr)) &#123;</span><br><span class="line">+            formatStr = formatStr.replace(<span class="built_in">RegExp</span>.$1, (<span class="built_in">RegExp</span>.$1.length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span> + o[k]).substr((<span class="string">&quot;&quot;</span> + o[k]).length)));</span><br><span class="line">+        &#125;</span><br><span class="line">+    &#125;</span><br><span class="line">+    <span class="keyword">return</span> formatStr;</span><br><span class="line">+&#125;</span><br><span class="line"><span class="comment">// =======================上面的那种支持小程序包含正则的变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timestampToDate</span>(<span class="params">timestamp, format</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp);</span><br><span class="line">  <span class="keyword">var</span> year = date.getFullYear();</span><br><span class="line">  <span class="keyword">var</span> month = (<span class="string">&#x27;0&#x27;</span> + (date.getMonth() + <span class="number">1</span>)).slice(-<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> day = (<span class="string">&#x27;0&#x27;</span> + date.getDate()).slice(-<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> hours = (<span class="string">&#x27;0&#x27;</span> + date.getHours()).slice(-<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> minutes = (<span class="string">&#x27;0&#x27;</span> + date.getMinutes()).slice(-<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> seconds = (<span class="string">&#x27;0&#x27;</span> + date.getSeconds()).slice(-<span class="number">2</span>);</span><br><span class="line">  format = format || <span class="string">&#x27;yyyy-MM-dd HH:mm:ss&#x27;</span>;</span><br><span class="line">  format = format.replace(<span class="string">&#x27;yyyy&#x27;</span>, year);</span><br><span class="line">  format = format.replace(<span class="string">&#x27;MM&#x27;</span>, month);</span><br><span class="line">  format = format.replace(<span class="string">&#x27;dd&#x27;</span>, day);</span><br><span class="line">  format = format.replace(<span class="string">&#x27;HH&#x27;</span>, hours);</span><br><span class="line">  format = format.replace(<span class="string">&#x27;mm&#x27;</span>, minutes);</span><br><span class="line">  format = format.replace(<span class="string">&#x27;ss&#x27;</span>, seconds);</span><br><span class="line">  <span class="keyword">return</span> format;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="列表数据上拉加载"><a href="#列表数据上拉加载" class="headerlink" title="列表数据上拉加载"></a>列表数据上拉加载</h3><strong>操作步骤</strong></li><li>在 pages.json 中，为 product-list 配置上拉触底事件的触发距离<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: <span class="string">&quot;product-list/product-list&quot;</span>,</span><br><span class="line">  <span class="string">&quot;style&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;onReachBottomDistance&quot;</span>: <span class="number">200</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在页面代码中添加上拉加载事件监听函数<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="title">onReachBottom</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 页码加 1</span></span><br><span class="line">  <span class="built_in">this</span>.params.pagenum += <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 请求数据</span></span><br><span class="line">  <span class="built_in">this</span>.getProductList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>改造获取列表数据的方法，让其支持上拉加载数据(<strong>新数据要添加到原来的数据后面</strong>)<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 获取列表数据的方法</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="title">getProductList</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 在原有数据的后面添加新获取到的数据老的数据加上新的数据</span></span><br><span class="line">  <span class="built_in">this</span>.productList = [...this.productList, ...message.goods];</span><br><span class="line">  <span class="built_in">this</span>.total = message.total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用节流阀防止多余请求"><a href="#使用节流阀防止多余请求" class="headerlink" title="使用节流阀防止多余请求"></a>使用节流阀防止多余请求</h3></li></ol><ul><li>优化: 当正在请求商品列表接口时, 不再额外请求商品列表接口(保证同一时间段最多只有一个请求)<br>操作步骤</li></ul><ol><li>在 data 中定义节流阀数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 是否正在请求数据</span></span><br><span class="line">isLoading: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在发请求前后设置节流阀开关状态<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取商品列表数据的方法</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="title">getProductList</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 打开节流阀</span></span><br><span class="line">  <span class="built_in">this</span>.isLoading = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; meta, message &#125; = <span class="keyword">await</span> <span class="built_in">this</span>.$http.get(<span class="string">&quot;/goods/search&quot;</span>, <span class="built_in">this</span>.params);</span><br><span class="line">  <span class="comment">// 请求失败处理</span></span><br><span class="line">  <span class="keyword">if</span> (meta.status !== <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.$msg();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 在原有数据的后面添加新获取到的数据</span></span><br><span class="line">  <span class="built_in">this</span>.productList = [...this.productList, ...message.goods];</span><br><span class="line">  <span class="built_in">this</span>.total = message.total;</span><br><span class="line">  <span class="comment">// 关闭节流阀</span></span><br><span class="line">  <span class="built_in">this</span>.isLoading = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在触底事件函数中，根据节流阀状态判断是否要发请求<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onReachBottom</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 判断是否正在请求其它数据，如果是则不发起额外的请求</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.isLoading) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 让页码增加1</span></span><br><span class="line">  <span class="built_in">this</span>.params.pagenum += <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 请求数据</span></span><br><span class="line">  <span class="built_in">this</span>.getProductList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>注意: 服务器性能较差, 接口容易出现502</strong><h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><strong>操作步骤</strong></li><li>在 pages.json 中，配置启用页面的下拉刷新功能<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: <span class="string">&quot;product-list/product-list&quot;</span>,</span><br><span class="line">  <span class="string">&quot;style&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">    <span class="string">&quot;onReachBottomDistance&quot;</span>: <span class="number">150</span>,</span><br><span class="line">    <span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;backgroundColor&quot;</span>: <span class="string">&quot;#F8F8F8&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>监听页面的下拉刷新事件，并在里面重新请求列表数据的第1页数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下拉刷新的事件</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="title">onPullDownRefresh</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 重置关键数据</span></span><br><span class="line">  <span class="built_in">this</span>.params.pagenum = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">this</span>.productList = [];</span><br><span class="line">  <span class="comment">// 2. 重新发起请求</span></span><br><span class="line">  <span class="keyword">await</span> <span class="built_in">this</span>.getProductList();</span><br><span class="line">  <span class="comment">// 3. 关闭下拉刷新效果</span></span><br><span class="line">  uni.stopPullDownRefresh();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>以上就是uinapp从0-1搭建小程序的一些总结，后面会继续总结自己，加油，冲冲冲 Peace and love</p></div></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>uinapp框架的搭建</title>
      <link href="blog/01-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/"/>
      <url>blog/01-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0uinapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="01-深度学习uinapp"><a href="#01-深度学习uinapp" class="headerlink" title="01-深度学习uinapp"></a>01-深度学习uinapp</h1><h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><p><a href="https://uniapp.dcloud.net.cn/">uni-app</a> 是一个使用 <a href="https://vuejs.org/">Vue.js</a> 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉/淘宝）、快应用等多个平台。<hr><br>uni-app 的实现原理：将 Vue 代码通过 webpack 翻译成其他平台的代码</p><h2 id="起步：开发工具"><a href="#起步：开发工具" class="headerlink" title="起步：开发工具"></a>起步：开发工具</h2><p>开发 uni-app 项目所需的工具<br><em>vue-cli + vscode + 微信开发者工具</em><br><em><a href="https://www.dcloud.io/hbuilderx.html">HBuilderX</a> + 微信开发者工具</em><br>在 uni-app 项目开发中，微信开发者工具扮演什么角色？ 模拟器</p><h2 id="起步：新建项目"><a href="#起步：新建项目" class="headerlink" title="起步：新建项目"></a>起步：新建项目</h2><p>1.全局安装 Vue CLI<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line">vue create  项目名 创建vue的项目</span><br><span class="line">vue create  创建uniapp的项目</span><br></pre></td></tr></table></figure></p><h2 id="起步：项目结构"><a href="#起步：项目结构" class="headerlink" title="起步：项目结构"></a>起步：项目结构</h2><p>uni-app 项目目录和文件功能介绍<br>概念介绍<br>uni-app 项目的 src 目录，默认包含以下目录和文件：<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">┌─ pages            页面文件目录</span><br><span class="line">│  └─ index</span><br><span class="line">│     └─index.vue   index页面组件 相当于 index.js+index.wxml+index.wxss</span><br><span class="line">│ </span><br><span class="line">├─ static           存放静态资源的目录。注意：静态资源只能存放于此</span><br><span class="line">│ </span><br><span class="line">├─ main.js          Vue 入口文件</span><br><span class="line">├─ App.vue          相当于小程序原生框架里的 app.js 和 app.wxss 的组合</span><br><span class="line">│</span><br><span class="line">├─ manifest.json    加强版project.config.json(应用名,appid,logo,版本等信息)</span><br><span class="line">└─ pages.json       相当于小程序原生框架里的全局配置和页面配置的组合  </span><br></pre></td></tr></table></figure></p><h2 id="起步：配置App"><a href="#起步：配置App" class="headerlink" title="起步：配置App"></a>起步：配置App</h2><p><em>操作步骤</em><br>1.在 manifest.json 中的  mp-weixin 属性下，配置 appid：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;mp-weixin&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;appid&quot;</span>: <span class="string">&quot;xxxxxxxxxxxxxxx&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="起步：运行项目"><a href="#起步：运行项目" class="headerlink" title="起步：运行项目"></a>起步：运行项目</h2><ol><li>uni-app 项目分别以网页的形式、以及小程序的形式运行</li><li>执行 npm 命令运行(PS:使用 npm 构建代码(确保设置appid))<br><strong> 两种运行的方式 </strong><br>一:网页方式运行<br>二:小程序方式运行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm </span></span><br><span class="line">npm run serve</span><br><span class="line">npm run dev:h5</span><br><span class="line">npm run dev:mp-weixin</span><br><span class="line">``` </span><br><span class="line">1. 在微信开发者工具中**导入** uni-app 项目下的 `dist/dev/mp-weixin`</span><br><span class="line"><span class="comment">## 起步：安装 SASS</span></span><br><span class="line">为项目添加 SASS 支持，使用SASS编写样式代码</span><br><span class="line">**【注意事项】**</span><br><span class="line">- uni-ui 暂不支持最新版本 sass-loader，因此要将版本调整为较老版本：`<span class="string">&quot;sass-loader&quot;</span>: <span class="string">&quot;8.0.2&quot;</span>`</span><br><span class="line">**操作步骤**</span><br><span class="line">1. 安装 sass-loader 和 sass</span><br><span class="line">2. 在index页面组件中编写测试 scss 代码</span><br><span class="line">   ```bash</span><br><span class="line">   yarn add sass-loader@8.0.2 sass -D</span><br><span class="line">   &lt;view class=<span class="string">&quot;test&quot;</span>&gt;</span><br><span class="line">  &lt;text class=<span class="string">&quot;abc&quot;</span>&gt;hello world!&lt;/text&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span>&gt;</span><br><span class="line">.<span class="built_in">test</span> &#123;</span><br><span class="line">  .abc &#123;</span><br><span class="line">    color: teal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="起步：安装-uni-ui-组件库"><a href="#起步：安装-uni-ui-组件库" class="headerlink" title="起步：安装 uni-ui 组件库"></a>起步：安装 uni-ui 组件库</h2></li></ol><ul><li>安装uni-app官方提供的移动端UI组件库 uni-ui</li><li>本案例基于uni-ui组件库实现界面。<a href="https://hellouniapp.dcloud.net.cn/pages/extUI/icons/icons">点击查看组件文档</a></li><li>安装 uni-ui <strong>【特别注意】最新版的 uni-ui 中存在某些 Bug！建议换成可正常使用的 1.2.10 版本。</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @dcloudio/uni-ui@1.2.10</span><br></pre></td></tr></table></figure>但是这个老版本有些组件(图标)不支持</li></ul><ol><li>在 <strong>pages.json</strong> 中如下配置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// easycom组件模式, 不需要引用、注册，可以直接在页面中使用</span><br><span class="line"><span class="string">&quot;easycom&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;autoscan&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;custom&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;^uni-(.*)&quot;</span>: <span class="string">&quot;@dcloudio/uni-ui/lib/uni-<span class="variable">$1</span>/uni-<span class="variable">$1</span>.vue&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>配置后即可在任意组件中调用 uni-ui 组件：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uni-icons</span> <span class="attr">type</span>=<span class="string">&quot;forward&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uni-icons</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="起步：托管代码"><a href="#起步：托管代码" class="headerlink" title="起步：托管代码"></a>起步：托管代码</h2>将案例代码上传到gitthub服务器<br>先本地提交当前更改(可以利用可视化git操作)<br><strong>操作步骤</strong></li><li>在码云上新建一个代码仓库</li><li>将代码仓库的地址映射成本地项目的origin别名<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin xxxxxxxxxxxxxxxx</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>推送代码到远程仓库———此处省略代码的案例<h2 id="导航：上传代码"><a href="#导航：上传代码" class="headerlink" title="导航：上传代码"></a>导航：上传代码</h2><strong>操作步骤</strong></li><li>本地提交<code>master</code>分支改动代码</li><li>推送到远程仓库<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;xxxxxxx&#x27;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
